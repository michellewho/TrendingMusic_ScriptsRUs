length(url)
url
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", "J000298"))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
results.rep
rep.id <- results.leg$results.bioguide_id
rep.committees <- lapply(rep.id, getRepresentativeData)
rep.committees
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", "J000298"))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- lapply(rep.id, getRepresentativeData)
View(rep.committeses)
View(rep.committees)
getRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- lapply(rep.id, getRepresentativeData)
View(rep.committees)
GetRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.leg)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- lapply(rep.id, GetRepresentativeData)
View(rep.committees)
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
View(rep.committees)
GetRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
flatten()
return (results.rep)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
View(rep.committees)
rep.committees <- left_join(rep.id, rep.committees)
rep.committees <- join(rep.id, rep.committees)
rep.committees
View(rep.committees)
rep
results.rep
View(results.rep)
View(legislator.table)
results.leg
View(results.leg)
join.rep.committees <- (results.leg, rep.committees, by = results.bioguide_id)
join.rep.committees <- (results.leg, rep.committees, by = results.bioguide_id)
join.rep.committees <- (results.leg, rep.committees, by = "results.bioguide_id")
join.rep.committees <- join(results.leg, rep.committees, by = "results.bioguide_id")
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id")
join.rep.committees <- full_join(results.leg, rep.committees, by = results.bioguide_id)
results.leg
results.leg$results.bioguide_id
rep.committees$results.bioguide_id
join.rep.committees <- left_join(results.leg, rep.committees, by = results.bioguide_id)
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id"")
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id")
GetRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
mutate(ID = id) %>%
flatten()
return (results.rep)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
rep.committees$ID
GetRepresentativeData <- function(id) {
response.rep <- GET(paste0(base.uri, "/committees?member_ids=", id))
results.rep <- fromJSON(content(response.rep, "text")) %>%
data.frame() %>%
mutate(results.bioguide_id = id) %>%
flatten()
return (results.rep)
}
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id")
join.rep.committees
View(join.rep.committees)
join.rep.committees <- left_join(results.leg, rep.committees, by = "results.bioguide_id")
View(join.rep.committees)
join.rep.committees <- right_join(results.leg, rep.committees, by = "results.bioguide_id")
View(join.rep.committees)
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id")
View(join.rep.committees)
barplot(no.comm, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names)
barplot(joined.rep.committees, main="Committees Served on by Each Rep", horiz=TRUE, names.arg=names)
counts <- table(join.rep.committees$results.bioguide_id)
barplot(counts, main="Car Distribution", horiz=TRUE,
names.arg=c("3 Gears", "4 Gears", "5 Gears"))
is.data.frame(join.rep.committees)
order(join.rep.committees$results.bioguide_id, decreasing = TRUE)
counts <- table(join.rep.committees$results.bioguide_id, decreasing = TRUE)
barplot.data <- join.rep.committees %>%
group_by(results.bioguide_id)
arrange(desc(disp))
barplot.data <- join.rep.committees %>%
group_by(results.bioguide_id) %>%
arrange(desc(disp))
arrange(desc)
barplot.data <- join.rep.committees %>%
group_by(results.bioguide_id) %>%
arrange(desc)
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(reuslts.first_name, results.last_name, count.x)
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
barplot(rep.committees, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- full_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
rep.committees
View(rep.committees)
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(rep.committees$count, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste0(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- rep.committees %>%
group_by(results.bioguide_id) %>%
summarise(count = n()) %>%
left_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
View(rep.committees)
barplot(rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste0(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
rep.id <- results.leg$results.bioguide_id
rep.committees <- bind_rows(lapply(rep.id, GetRepresentativeData))
join.rep.committees <- rep.committees %>%
group_by(results.bioguide_id) %>%
summarise(count = n()) %>%
left_join(results.leg, rep.committees, by = "results.bioguide_id") %>%
arrange(count.x) %>%
select(results.first_name, results.last_name, count.x)
View(rep.committees)
rep.id <- results.leg$results.bioguide_id
rep.committees
colnames(rep.committees)
colnames(rep.committees)
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(rep.committees$results.first_name, rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 20), ylim = c(0, 4))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", x= "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), horiz = TRUE, xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las=2, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las = 0, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", las = 1, horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(5, 4, 4, 8) + 0.1), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(2, 4, 5, 3), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar=c(2, 4, 5, 3)), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(las = 1), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", par(mar = rep(.5,4)), horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep. \n \n", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
par(mar = c(5, 8, 8, 2))
barplot(join.rep.committees$count.x, main = "Committees Served on by Each Rep.", xlab = "# Committees", horiz = TRUE, names.arg = paste(join.rep.committees$results.first_name, join.rep.committees$results.last_name), xlim = c(0, 18), ylim = c(0, 3))
rep.committees$results.bioguide_id
rand(rep.committees$results.bioguide_id)
cantwell.id <- rep.committees$results.bioguide_id
rep.committees$results.bioguide_id
cantwell.id <- rep.committees$results.bioguide_id[1]
cantwell.id
results.rep
View(results.rep)
results.leg
View(results.leg)
cantwell.id <- rep.committees$results.bioguide_id[3]
cantwell.id <- results.leg$results.bioguide_id[3]
cantwell.id
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
response.commit
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
results.dist
View(results.dist)
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "subcommittee=false"))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "subcommittee=false"))
response.commit
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id))
response.commit
View(response.commit)
response.commit
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "&subcommittee=false"))
response.commit
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
cantwell.id <- results.leg$results.bioguide_id[3]
response.commit <- GET(paste0(base.uri, "/committees?member_ids=", cantwell.id, "&subcommittee=false"))
results.dist <- fromJSON(content(response.commit, "text")) %>%
data.frame() %>%
flatten()
results.dist
cantwell.committee <- results.dist[1]
View(cantwell.committee)
cantwell.committee <- results.dist[, 1]
View(cantwell.committee)
cantwell.committee <- results.dist[1, ]
View(cantwell.committee)
results.leg
View(results.leg)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= "members""))
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
response.commit
View(results.dist)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
body <- fromJSON(content(results.dist,"text"))$results$members[[1]] %>% flatten()
View(results.dist)
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
cantwell.committee.id <- cantwell.committee$results.committee_id
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'"))
View(all.members)
results.dist <- fromJSON(content(all.members, "text")) %>%
data.frame() %>%
flatten()
results.all.members <- fromJSON(content(all.members, "text")) %>%
data.frame() %>%
flatten()
View(results.dist)
View(results.all.members)
body <- fromJSON(content(all.members,"text"))$results$members[[1]] %>% flatten()
all.members <- GET(paste0(base.uri, "/committees?", "committee_id=", cantwell.committee.id, "&fields= 'members'")) %>% data.frame()
all.members <- data.frame(all.members)
join.rep.committees
View(join.rep.committees)
View(results.leg)
View(rep.committees)
committee <- rep.committees %>%
filter(results.subcommittee == FALSE)
chosen.committee <- committee[6,]
chosen.committee <- committee[1,]
my.committee <- committee[1,]
my.committee.member.fname <- filter(results.leg, results.bioguide_id == selected.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member.fname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member <- my.committee$results.bioguide_id
my.committee.member.fname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.first_name) %>%
first
my.committee.member.fname
my.committee.member.lname <- filter(results.leg, results.bioguide_id == my.committee.member) %>%
select(results.last_name) %>%
first
my.committee.name <- my.committee$results.name
my.committee.id <- my.committee$results.committee_id
committee.members <- GET(paste0(base.uri, "/committees?committee_id=", my.committee.id, "&fields=members"))
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name)
my.committee.name <- my.committee$results.name
my.committee.id <- my.committee$results.committee_id
response.committee.members <- GET(paste0(base.uri, "/committees?committee_id=", my.committee.id, "&fields=members"))
results.committee.members <- fromJSON(content(response.committee.members, "text"))$results$members[[1]] %>%
flatten()
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name)
chairman.fname
chairman.fname <- results.committee.members %>%
filter(title == "Chairman") %>%
select(legislator.first_name) %>%
first
chairman.fname
results.committee.members
View(results.committee.members)
chairman.fname <- results.committee.members %>%
filter(title == "Chair") %>%
select(legislator.first_name) %>%
first
chairman.fname
chairman.lname <- results.committee.members %>%
filter(title== "Chair") %>%
select(legislator.last_name) %>%
first
committee.count <- results.commitee.members %>% count()
results.committee.members <- fromJSON(content(response.committee.members, "text"))$results$members[[1]] %>%
flatten()
chairman.fname <- results.committee.members %>%
filter(title == "Chair") %>%
select(legislator.first_name) %>%
first
chairman.lname <- results.committee.members %>%
filter(title== "Chair") %>%
select(legislator.last_name) %>%
first
committee.count <- results.commitee.members %>% count()
committee.count <- results.committee.members %>% count()
majority.or.minority <- results.committee.members %>%
filter(legislator.bioguide_id == my.committee.member) %>%
first
my.committee.name
committee.info <- "This committee is a standing committee of the U.S. House of Representatives. It oversees the federal budget process, reviews all bills and resolutions on the budget, and monitors agencies and programs funded outside of the budgetary process."
committee.males <- results.committee.members %>%
filter(legislator.gender == "M") %>%
count()
committee.females <- results.committee.members %>%
filter(legislator.gender == "F") %>%
count()
committee.males.percent <- (committee.males/committee.count) * 100
committee.males.percent
committee.males.percent <- round((committee.males/committee.count) * 100, digits = 1)
committee.males.percent
committee.females.percent <- round((committee.females/committee.count) * 100, digits = 2)
committee.females.percent
majority.or.minority
View(rep.committees)
cereal <- read.table('~/Desktop/INFO201/a8-building-apps-michellewho/data/cereal.tsv', header = TRUE, stringsAsFactors=FALSE)
shiny::runApp('Desktop/INFO201/a8-building-apps-michellewho')
shiny::runApp('Desktop/INFO201/NFL-Project-Proposal')
setwd("~/Documents/INFO370/Labs/Lab4")
beav1 <- read.csv('/Documents/INFO370/Labs/Lab4/beav1.csv', row.names=1)
pwd
setwd("~/")
beav1 <- read.csv('/Documents/INFO370/Labs/Lab4/beav1.csv', row.names=1)
beav1 <- read.csv('~/Documents/INFO370/Labs/Lab4/beav1.csv', row.names=1)
beav2 <- read.csv('~/Documents/INFO370/Labs/Lab4/beav2.csv', row.names=1)
beav1
print(beav1.day)
int(beav1['day'])
print(beav1['day'])
head(beav1)
install.packages("plotly")
beav1 <- read.csv('~/Documents/INFO370/Labs/Lab4/beav1.csv', row.names=1)
beav2 <- read.csv('~/Documents/INFO370/Labs/Lab4/beav2.csv', row.names=1)
head(beav1)
head(beav2)
hist(beav1)
plot(beav1$day, beav1$temp)
plot(beav1$temp, beav1$day)
plot(beav1$temp)
boxplot(beav1$temp)
boxplot(beav2$temp)
p)
boxplot(beav2$temp
boxplot(beav1$temp)
boxplot(beav2$temp)
boxplot(beav1$temp)
boxplot(beav2$temp)
boxplot(beav1$temp)
boxplot(beav2$temp)
hist(beav1$temp)
hist(beav2$temp)
beav1mean <- t.test(beav1$temp, beav2$temp, var.equal = TRUE)
beav1mean <- t.test(beav1$temp, beav2$temp)
beav1mean
t.test(beav1$temp, beav2$temp)
colors <- c('red', 'orange', 'yellow', 'green', 'blue', 'brown')
colors <- c('red', 'orange', 'yellow', 'green', 'blue', 'brown')
proportions <- c(0.13, 0.20, 0.14, 0.16, 0.24, 0.13)
colors.df<-data.frame(colors, proportions)
colors.df
colors <- c('red', 'orange', 'yellow', 'green', 'blue', 'brown')
colors <- c('red', 'orange', 'yellow', 'green', 'blue', 'brown')
counts <- c(108, 133, 103, 139, 133, 96)
proportions <- c(0.13, 0.20, 0.14, 0.16, 0.24, 0.13)
colors.df<-data.frame(colors, counts, proportions)
colors.df
barplot(colors.df)
barplot(colors.df$counts)
barplot(colors.df$counts, title= "Color Counts")
barplot(colors.df$counts, main= "Color Counts")
barplot(colors.df$counts, main= "Color Counts")
t.test(colors.df$counts)
hist(beav1$temp)
beav1 <- read.csv('~/Documents/INFO370/Labs/Lab4/beav1.csv', row.names=1)
beav2 <- read.csv('~/Documents/INFO370/Labs/Lab4/beav2.csv', row.names=1)
#plot data of temperatures
hist(beav1$temp)
hist(beav2$temp)
par(mar = rep(2, 4))
hist(beav1$temp)
hist(beav2$temp)
t.test(beav1$temp, beav2$temp)
t.test(beav1$temp, beav2$temp, alternative = 'two-sided')
t.test(beav1$temp, beav2$temp, alternative = 'two-sided')
t.test(beav1$temp, beav2$temp, alternative = 'two.sided')
colors.df<-data.frame(colors, counts, proportions)
colors <- c('red', 'orange', 'yellow', 'green', 'blue', 'brown')
counts <- c(108, 133, 103, 139, 133, 96)
proportions <- c(0.13, 0.20, 0.14, 0.16, 0.24, 0.13)
colors.df<-data.frame(colors, counts, proportions)
colorBP <- barplot(colors.df$counts, main= "Color Counts")
colors <- c('red', 'orange', 'yellow', 'green', 'blue', 'brown')
counts <- c(108, 133, 103, 139, 133, 96)
exp <- c(0.13, 0.20, 0.14, 0.16, 0.24, 0.13)
colors.df<-data.frame(colors, counts, proportions)
#draw barplot of color counts
colorBP <- barplot(colors.df$counts, main= "Color Counts")
expected <- data.frame(exp, colors)
expected <- expected[order(expected$colors),]
chisq.test(table(data), expected$exp, correct=FALSE)
expected <- data.frame(exp, colors)
expected <- expected[order(expected$colors),]
chisq.test(table(data), expected$exp, correct=FALSE)
chisq.test(table(colors.df), expected$exp, correct=FALSE)
data
set1 <- sample(12, 10000, replace = FALSE)
barplot(set1)
die1 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
die2 <- c(1, 2, 3, 4, 5, 6)
set1 <- sample(die1, 10000, replace = TRUE)
set2 <- sample(die2, 10000, replace = TRUE) + sample(die2, 10000, replace = TRUE)
barplot(set1)
barplot(set1, plot=FALSE)
barplot(set1)
set1 <- sample(die1, 10000, replace = TRUE)
set1
combo <- set1.append(set2)
combo <- c(set1, set2)
combo
par(mfrow=c(1,1))
barplot(table(set1), ylim = c(0,2000), xlab = "number", ylab = "count", main="Rolls")
barplot(table(set1), ylim = c(0,2000), xlab = "number", ylab = "count", main="Rolls for Die1")
barplot(table(set2), ylim = c(0,2000), xlab = "number", ylab = "count", main="Rolls for Die2")
barplot(table(set1), ylim = c(0,2000), xlab = "number", ylab = "count", main="counts for Die1")
barplot(table(set2), ylim = c(0,2000), xlab = "number", ylab = "count", main="counts for Die2")
par(mfrow=c(1,5))
apply(matrix(sample(x, size = 5, replace = TRUE, 2, mean)))
hist(drawmeans5)
drawmeans5 = apply(matrix(sample(x, size = 5, replace = TRUE, 2, mean)))
hist(drawmeans5)
n <- 5                        # Sample size
nreps <- 5                   # Number of replications
sample.mean <- numeric(nreps)  # Variable to store means
hist(sample.mean, breaks = 50, main = "Distribution of Sample Mean \n for Normal", xlab = "Mean")
barplot(table(set1), ylim = c(0,2000), xlab = "number", ylab = "count", main="Counts for Die1")
barplot(table(set2), ylim = c(0,2000), xlab = "number", ylab = "count", main="Counts for Die2")
par(mfrow=c(1,1))
barplot(table(set1), ylim = c(0,2000), xlab = "number", ylab = "count", main="Counts for Die1")
barplot(table(set2), ylim = c(0,2000), xlab = "number", ylab = "count", main="Counts for Die2")
hist(numeric(5), breaks = 50, main = "Distribution of Sample Mean \n for Normal", xlab = "Mean")
hist(numeric(5), breaks = 50, main = "Distribution of Sample Mean \n for Normal", xlab = "Mean")
sample.mean <- numeric(5)  # Variable to store means
n <- 5                        # Sample size
nreps <- 5                   # Number of replications
sample.mean <- numeric(5)  # Variable to store means
hist(sample.mean, breaks = 50, main = "Distribution of Sample Mean \n for Normal", xlab = "Mean")
sampleList = c(5, 25, 125, 625)
ymax = c(5, 15, 50, 225)
for (i in i:length(sampleLis)) {
numSamples = sampleList[i]
means = mat.or.vec(numSamples, 1)
for (j in 1:numSamples) {
means[j] = mean(sample(die1Rolls, 5))
}
titleString = paste(toString(numSamples), "samples (set1)")
histogram = hist(means, breaks = die1, yaxt = 'n')
}
sampleList = c(5, 25, 125, 625)
ymax = c(5, 15, 50, 225)
for (i in i:length(sampleList)) {
numSamples = sampleList[i]
means = mat.or.vec(numSamples, 1)
for (j in 1:numSamples) {
means[j] = mean(sample(die1Rolls, 5))
}
titleString = paste(toString(numSamples), "samples (set1)")
histogram = hist(means, breaks = die1, yaxt = 'n')
}
setwd("~/Documents/INFO370/TrendingMusic_ScriptsRUs/scripts")
data <- read.csv('./data/Billboad_data.csv')
pwd
setwd("~/Documents/INFO370/TrendingMusic_ScriptsRUs/data")
../
cd ..
setwd("~/Documents/INFO370/TrendingMusic_ScriptsRUs/scripts")
read.csv("../data")
read.csv("../data/Billboard_data.csv")
